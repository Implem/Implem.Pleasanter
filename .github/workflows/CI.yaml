name: CI
on:
    push:
        branches: ['feature/daily-build-and-test']
env:
  AZURE_WEBAPP_NAME: pleasanter
  AZURE_WEBAPP_PACKAGE_PATH: Implem.Pleasanter/publish
  AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.pleasanter_f16e }}
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.0.x
  WORKING_DIRECTORY: Implem.Pleasanter
  WORKING_DIR_CODEDEFINER: Implem.CodeDefiner
  WORKING_DIR_TESTAUTOMATION: Implem.TestAutomation
jobs:
    build:
        runs-on: ubuntu-latest
        env:
            Implem.Pleasanter_Rds_PostgreSQL_SaConnectionString: ${{ secrets.pleasanter_rds_sa_conn }}
            Implem.Pleasanter_Rds_PostgreSQL_OwnerConnectionString: ${{ secrets.pleasanter_rds_owner_conn }}
            Implem.Pleasanter_Rds_PostgreSQL_UserConnectionString: ${{ secrets.pleasanter_rds_user_conn }}
            POSTGRES_USER: ${{ secrets.postgres_user }}
            POSTGRES_PASSWORD: ${{ secrets.postgres_password }}
            POSTGRES_DB: ${{ secrets.postgres_db }}
        steps:
            - uses: actions/checkout@v3
            - name: Setup .NET Core SDK ${{ env.DOTNET_CORE_VERSION }}
              uses: actions/setup-dotnet@v2
              with:
                dotnet-version: ${{ env.DOTNET_CORE_VERSION }}            
            - name: build on docker-compose
              run: docker-compose build
              working-directory: ./
            - name: run Implem.CodeDefiner on docker-compose
              run: docker-compose run --rm --name codedefiner implem.codedefiner _rds
              working-directory: ./
            - name: run Implem.Pleasanter on docker-compose
              run: docker-compose run -d -p 50001:80 --rm --name pleasanter implem.pleasanter
              working-directory: ./
            - name: build Implem.TestAutomation
              run: dotnet build "Implem.TestAutomation.csproj" -c Release
              working-directory: ${{ env.WORKING_DIR_TESTAUTOMATION }}
            - name: run Implem.TestAutomation
              run: dotnet Implem.TestAutomation.dll /p . /s
              working-directory: ${{ env.WORKING_DIR_TESTAUTOMATION }}/bin/Release/net6.0
            - name: clean up on docker-compose
              run: docker-compose down
              working-directory: ./
