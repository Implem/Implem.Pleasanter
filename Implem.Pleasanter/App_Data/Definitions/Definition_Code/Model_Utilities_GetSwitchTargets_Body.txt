private static List<#IdType#> GetSwitchTargets(Context context, SiteSettings ss, #IdType# #modelName#Id<!--Model_Utilities_SiteIdParam-->)
{
    var view = Views.GetBySession(
        context: context,
        ss: ss,
        setSession: false);
    var where = view.Where(context: context, ss: ss<!--Model_Utilities_SqlWhereTenantId-->);
    var param = view.Param(
        context: context,
        ss: ss);
    var orderBy = view.OrderBy(
        context: context,
        ss: ss)
            .#TableName#_UpdatedTime(SqlOrderBy.Types.desc);
    var join = ss.Join(
        context: context,
        join: new IJoin[]
        {
            where,
            orderBy
        });
    var switchTargets = new List<#IdType#>();
    if (Parameters.General.SwitchTargetsLimit > 0)
    {
        if (Repository.ExecuteScalar_int(
            context: context,
            statements: Rds.Select#TableName#(
                column: Rds.#TableName#Column().#TableName#Count(),
                join: join,
                where: where,
                param: param)) <= Parameters.General.SwitchTargetsLimit)
        {
            switchTargets = Repository.ExecuteTable(
                context: context,
                statements: Rds.Select#TableName#(
                    column: Rds.#TableName#Column().#ModelName#Id(),
                    join: join,
                    where: where,
                    param: param,
                    orderBy: orderBy))
                        .AsEnumerable()
                        .Select(o => o["#ModelName#Id"]#CastIdType#)
                        .ToList();
        }
    }
    if (!switchTargets.Contains(#modelName#Id))
    {
        switchTargets.Add(#modelName#Id);
    }
    return switchTargets;
}