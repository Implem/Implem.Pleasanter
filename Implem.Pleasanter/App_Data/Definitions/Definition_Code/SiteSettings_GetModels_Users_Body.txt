public static SiteSettings UsersSiteSettings(
    Context context,
    Sqls.TableTypes tableTypes = Sqls.TableTypes.Normal,
    bool setAllChoices = false)
{
    var ss = new SiteSettings()
    {
        ReferenceType = "Users"
    };
    ss.Init(context: context);
    ss.SetLinks(context: context);
    ss.SetChoiceHash(
        context: context,
        withLink: false,
        all: setAllChoices);
    ss.PermissionType = Permissions.Admins(context: context);
    ss.TableType = tableTypes;
    if (context.ContractSettings.Api == false
        || (!DefinitionAccessor.Parameters.User.DisableApi && !context.DisableApi))
    {
        var column = ss.GetColumn(
            context: context,
            columnName: "AllowApi");
        var columnAccessControl = new ColumnAccessControl()
        {
            No = column.No,
            ColumnName = column.ColumnName,
            Type = Permissions.Types.ManageService
        };
        ss.CreateColumnAccessControls = ss.CreateColumnAccessControls ?? new List<ColumnAccessControl>();
        ss.ReadColumnAccessControls = ss.ReadColumnAccessControls ?? new List<ColumnAccessControl>();
        ss.UpdateColumnAccessControls = ss.UpdateColumnAccessControls ?? new List<ColumnAccessControl>();
        ss.CreateColumnAccessControls.Add(columnAccessControl);
        ss.ReadColumnAccessControls.Add(columnAccessControl);
        ss.UpdateColumnAccessControls.Add(columnAccessControl);
        return ss;
    }
    if (context.UserSettings?.EnableManageTenant == true)
    {
        var column = ss.GetColumn(
            context: context,
            columnName: "AllowApi");
        var columnAccessControl = new ColumnAccessControl()
        {
            No = column.No,
            ColumnName = column.ColumnName,
            Type = Permissions.Types.NotSet
        };
        ss.CreateColumnAccessControls = ss.CreateColumnAccessControls ?? new List<ColumnAccessControl>();
        ss.ReadColumnAccessControls = ss.ReadColumnAccessControls ?? new List<ColumnAccessControl>();
        ss.UpdateColumnAccessControls = ss.UpdateColumnAccessControls ?? new List<ColumnAccessControl>();
        ss.CreateColumnAccessControls.Add(columnAccessControl);
        ss.ReadColumnAccessControls.Add(columnAccessControl);
        ss.UpdateColumnAccessControls.Add(columnAccessControl);
        return ss;
    }
    return ss;
}