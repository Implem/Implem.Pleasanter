public static ErrorData OnUnlockRecord(
    Context context,
    SiteSettings ss,
    #ModelName#Model #modelName#Model,
    bool api = false,
    bool serverScript = false)
{

<!--Model_Validator_Api-->

    if (!ss.LockedRecord())
    {
        return new ErrorData(
            context: context,
            type: Error.Types.NotLockedRecord,
            api: api,
            sysLogsStatus: 400,
            sysLogsDescription: Debugs.GetSysLogsDescription());
    }
    if (!context.CanUpdate(
        ss: ss,
        checkLocked: false)
            || #modelName#Model.ReadOnly)
    {
        return !context.CanRead(ss: ss)
            ? new ErrorData(
                context: context,
                type: Error.Types.NotFound,
                api: api,
                sysLogsStatus: 403,
                sysLogsDescription: Debugs.GetSysLogsDescription())
            : new ErrorData(
                context: context,
                type: Error.Types.HasNotPermission,
                api: api,
                sysLogsStatus: 403,
                sysLogsDescription: Debugs.GetSysLogsDescription());
    }
    if (!context.HasPrivilege && ss.LockedRecordUser.Id != context.UserId)
    {
        return new ErrorData(
            context: context,
            type: Error.Types.HasNotPermission,
            api: api,
            sysLogsStatus: 403,
            sysLogsDescription: Debugs.GetSysLogsDescription());
    }
    return new ErrorData(
        context: context,
        type: Error.Types.None,
        api: api,
        sysLogsStatus: 200,
        sysLogsDescription: Debugs.GetSysLogsDescription());
}