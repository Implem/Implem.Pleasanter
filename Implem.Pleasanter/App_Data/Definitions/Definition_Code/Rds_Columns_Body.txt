<!--Rds_Columns_SqlClasses-->
<!--Rds_Columns_ConstSqlWhereLike-->
<!--Rds_Columns_ConstSqlWhereLike_Numeric-->

public static #TableName#ColumnCollection #TableName#Column(
    this #TableName#ColumnCollection self,
    string columnName,
    string _as = null,
    Sqls.Functions function = Sqls.Functions.None)
{
    switch (columnName)
    {

<!--Rds_Columns_SqlColumnCases-->

        default:
            return Def.ExtendedColumnTypes.ContainsKey(columnName ?? string.Empty)
                ? self.Add(
                    columnBracket: $"\"{columnName}\"",
                    columnName: columnName,
                    _as: _as,
                    function: function)
                : self;
    }
}

<!--Rds_Columns_SqlColumn-->
<!--Rds_Columns_SqlColumn_SelectColumns-->
<!--Rds_Columns_SqlColumn_ComputeColumn-->

public static #TableName#ColumnCollection #TableName#Count(
    this #TableName#ColumnCollection self,
    string _as = "#TableName#Count")
{
    return self.Add(
        columnBracket: "*",
        tableName: null,
        _as: _as,
        function: Sqls.Functions.Count);
}

<!--Rds_Columns_SqlWhere-->
<!--Rds_Columns_SqlWhere_SelectColumns-->
<!--Rds_Columns_SqlWhere_ComputeColumn-->
<!--Rds_Columns_SqlWhere_In-->
<!--Rds_Columns_SqlWhere_Between_Number-->
<!--Rds_Columns_SqlWhere_Between_DateTime-->

public static #TableName#WhereCollection Sub(
    this #TableName#WhereCollection self,
    SqlStatement sub,
    object value = null,
    string _operator = "=",
    bool _using = true)
{
    return _using 
        ? self.Add(
            null, null, null, value, _operator, sub: sub)
        : self;
}

public static #TableName#GroupByCollection #TableName#GroupBy(
    this #TableName#GroupByCollection self, string columnName, bool _using = true)
{
    if (_using)
    {
        switch (columnName)
        {

<!--Rds_Columns_SqlGroupByCases-->

            default:
                return Def.ExtendedColumnTypes.ContainsKey(columnName ?? string.Empty)
                    ? self.Add(columnBracket: $"\"{columnName}\"")
                    : self;
        }
    }
    else
    {
        return self;
    }
}

<!--Rds_Columns_SqlGroupBy-->

public static #TableName#HavingCollection #TableName#Count(
    this #TableName#HavingCollection self,
    object value = null,
    string tableName = "#TableName#",
    string _operator = null)
{
    return self.Add(
        columnBracket: "*",
        value: value,
        tableName: tableName,
        _operator: _operator,
        function: Sqls.Functions.Count);
}

<!--Rds_Columns_SqlHavingComputes-->
<!--Rds_Columns_SqlOrderBy1-->
<!--Rds_Columns_SqlOrderBy2-->

public static #TableName#OrderByCollection #TableName#Count(
    this #TableName#OrderByCollection self,
    SqlOrderBy.Types orderType = SqlOrderBy.Types.asc)
{
    return self.Add(
        columnBracket: "*",
        orderType: orderType,
        function: Sqls.Functions.Count);
}

<!--Rds_Columns_SqlParam_ItemId-->
<!--Rds_Columns_SqlParam-->
