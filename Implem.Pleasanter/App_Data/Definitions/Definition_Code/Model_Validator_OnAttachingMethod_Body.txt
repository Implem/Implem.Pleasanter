private static ErrorData OnAttaching(
    Context context, SiteSettings ss, #ModelName#Model #modelName#Model)
{
    foreach (var column in ss.Columns.Where(o => o.TypeCs == "Attachments"))
    {
        if (#modelName#Model.Attachments_Updated(
            columnName: column.Name,
            context: context,
            column: column))
        {
            var invalid = BinaryValidators.OnUploading(
                context: context,
                ss: ss,
                attachmentsHash: #modelName#Model.AttachmentsHash);
            switch (invalid)
            {
                case Error.Types.OverLimitQuantity:
                    return new ErrorData(
                        context: context,
                        type: Error.Types.OverLimitQuantity,
                        data: column.LimitQuantity.ToInt().ToString(),
                        sysLogsStatus: 400,
                        sysLogsDescription: Debugs.GetSysLogsDescription());
                case Error.Types.OverLimitSize:
                    return new ErrorData(
                        context: context,
                        type: Error.Types.OverLimitSize,
                        data: column.LimitSize.ToInt().ToString(),
                        sysLogsStatus: 400,
                        sysLogsDescription: Debugs.GetSysLogsDescription());
                case Error.Types.OverTotalLimitSize:
                    return new ErrorData(
                        context: context,
                        type: Error.Types.OverTotalLimitSize,
                        data: column.TotalLimitSize.ToInt().ToString(),
                        sysLogsStatus: 400,
                        sysLogsDescription: Debugs.GetSysLogsDescription());
                case Error.Types.OverLocalFolderLimitSize:
                    return new ErrorData(
                        context: context,
                        type: Error.Types.OverLocalFolderLimitSize,
                        data: column.LocalFolderLimitSize.ToInt().ToString(),
                        sysLogsStatus: 400,
                        sysLogsDescription: Debugs.GetSysLogsDescription());
                case Error.Types.OverLocalFolderTotalLimitSize:
                    return new ErrorData(
                        context: context,
                        type: Error.Types.OverLocalFolderTotalLimitSize,
                        data: column.LocalFolderTotalLimitSize.ToInt().ToString(),
                        sysLogsStatus: 400,
                        sysLogsDescription: Debugs.GetSysLogsDescription());
                case Error.Types.OverTenantStorageSize:
                    return new ErrorData(
                        context: context,
                        type: Error.Types.OverTenantStorageSize,
                        data: context.ContractSettings.StorageSize.ToInt().ToString(),
                        sysLogsStatus: 400,
                        sysLogsDescription: Debugs.GetSysLogsDescription());
            }
        }
    }
    return new ErrorData(
        context: context,
        type: Error.Types.None,
        sysLogsStatus: 200,
        sysLogsDescription: Debugs.GetSysLogsDescription());
}