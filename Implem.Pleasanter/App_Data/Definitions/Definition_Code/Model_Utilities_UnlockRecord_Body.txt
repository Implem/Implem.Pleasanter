public static string UnlockRecord(
    Context context, SiteSettings ss, long #modelName#Id)
{
    var #modelName#Model = new #ModelName#Model(
        context: context,
        ss: ss,
        #modelName#Id: #modelName#Id,
        formData: context.Forms);
    var invalid = #ModelName#Validators.OnUnlockRecord(
        context: context,
        ss: ss);
    switch (invalid.Type)
    {
        case Error.Types.None: break;
        default: return invalid.MessageJson(context: context);
    }
    #modelName#Model.Timestamp = context.Forms.Get("Timestamp");
    #modelName#Model.Locked = false;
    var errorData = #modelName#Model.Update(
        context: context,
        ss: ss,
        notice: true);
    switch (errorData.Type)
    {
        case Error.Types.None:
            ss.LockedRecordTime = null;
            ss.LockedRecordUser = null;
            return EditorResponse(
                context: context,
                ss: ss,
                #modelName#Model: #modelName#Model)
                    .SetMemory("formChanged", false)
                    .Message(Messages.UnlockedRecord(context: context))
                    .Messages(context.Messages)
                    .ClearFormData()
                    .ToJson();
        case Error.Types.UpdateConflicts:
            return Messages.ResponseUpdateConflicts(
                context: context,
                data: #modelName#Model.Updator.Name)
                    .ToJson();
        default:
            return errorData.MessageJson(context: context);
    }
}