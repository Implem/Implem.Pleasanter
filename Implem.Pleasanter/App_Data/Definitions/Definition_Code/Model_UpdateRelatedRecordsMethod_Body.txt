public void UpdateRelatedRecords(
    Context context,

    <!--Model_SiteSettingsParameter-->
    <!--Model_ExtendedSqlsParameter-->

    bool get = false,
    string previousTitle = null,
    bool addUpdatedTimeParam = true,
    bool addUpdatorParam = true,
    bool updateItems = true)
{
    Repository.ExecuteNonQuery(
        context: context,
        transactional: true,
        statements: UpdateRelatedRecordsStatements(
            context: context,
            
            <!--Model_SiteSettingsWithParameterNameLower-->
            <!--Model_ExtendedSqls-->
            
            addUpdatedTimeParam: addUpdatedTimeParam,
            addUpdatorParam: addUpdatorParam,
            updateItems: updateItems)
                .ToArray());

<!--Model_GetAfterUpdatedExtendedSqls-->
<!--Model_UpdateTitles-->

}

public List<SqlStatement> UpdateRelatedRecordsStatements(
    Context context,

    <!--Model_SiteSettingsParameter-->
    <!--Model_ExtendedSqlsParameter-->

    bool addUpdatedTimeParam = true,
    bool addUpdatorParam = true,
    bool updateItems = true)
{
    var fullText = FullText(context, <!--Model_SiteSettingsOnly--><!--Model_SiteSettings_SitesOnly-->);
    var statements = new List<SqlStatement>();
    statements.Add(Rds.UpdateItems(
        where: Rds.ItemsWhere().ReferenceId(#ModelName#Id),
        param: Rds.ItemsParam()
            .SiteId(SiteId)
            .Title(Title.DisplayValue)
            .FullText(fullText, _using: fullText != null)
            .SearchIndexCreatedTime(DateTime.Now, _using: fullText != null),
        addUpdatedTimeParam: addUpdatedTimeParam,
        addUpdatorParam: addUpdatorParam,
        _using: updateItems));

<!--Model_InsertLinksByUpdate-->
<!--Model_InsertLinksByUpdate_Site-->
<!--Model_UpdateSites_Wikis-->
<!--Model_OnUpdatedExtendedSqls-->

    return statements;
}

<!--Model_InsertLinks-->