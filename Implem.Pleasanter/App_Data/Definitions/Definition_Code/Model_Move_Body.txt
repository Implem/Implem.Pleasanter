public ErrorData Move(Context context, SiteSettings ss, SiteSettings targetSs)
{
    SiteId = targetSs.SiteId;
    var statements = new List<SqlStatement>();
    var fullText = FullText(
        context: context,
        ss: targetSs);
    statements.AddRange(IfDuplicatedStatements(ss: targetSs));
    statements.AddRange(new List<SqlStatement>
    {
        Rds.UpdateItems(
            where: Rds.ItemsWhere().ReferenceId(#ModelName#Id),
            param: Rds.ItemsParam()
                .SiteId(SiteId)
                .FullText(fullText, _using: fullText != null)),
        Rds.Update#TableName#(
            where: Rds.#TableName#Where().#ModelName#Id(#ModelName#Id),
            param: Rds.#TableName#Param().SiteId(SiteId))
    });
    var response = Repository.ExecuteScalar_response(
        context: context,
        transactional: true,
        statements: statements.ToArray());
    if (response?.Event == "Duplicated")
    {
        return new ErrorData(
            type: Error.Types.Duplicated,
            id: #ModelName#Id,
            columnName: response.ColumnName);
    }
    SynchronizeSummary(
        context: context,
        ss: ss);
    Get(
        context: context,
        ss: targetSs);
    return new ErrorData(type: Error.Types.None);
}