using Implem.Libraries.Utilities;
using Implem.Pleasanter.Libraries.Requests;
using Implem.Pleasanter.Libraries.Responses;
using System.Collections.Generic;
using System.Linq;
namespace Implem.Pleasanter.Libraries.General
{
    public static class Error
    {
        public enum Types
        {
            None,

<!--Error_Types-->

        }

        public static bool Has(this Types type)
        {
            return type != Types.None;
        }

        public static Message Message(this Types type, Context context, params string[] data)
        {
            switch (type)
            {

<!--Error_Messages-->

                default: return null;
            }
        }

        public static string MessageJson(this Types type, Context context, params string[] data)
        {
            return new ResponseCollection(context: context).Message(type.Message(
                context: context,
                data: data)).ToJson();
        }

        public static string SdMessageJson(this Types type, Context context, params string[] data)
        {
            var response = type.Message(
                context: context,
                data: data);
            var value = new Dictionary<string, string>
                   {
                       { "Id", response.Id.ToString() },
                       { "Text", response.Text }
                   };
            return new SdResponse(
                method: value["Id"],
                value: value["Text"]).ToJson();
        }
    }
}