public string CsvData(
    Context context,
    SiteSettings ss,
    Column column,
    ExportColumn exportColumn,
    List<string> mine,
    bool? encloseDoubleQuotes)
{
    var value = string.Empty;
    switch (column.Name)
    {

<!--Model_CsvDataCases-->

        default:
            switch (Def.ExtendedColumnTypes.Get(column?.Name ?? string.Empty))
            {
                case "Class":
                    value = ss.ReadColumnAccessControls.Allowed(
                        context: context,
                        ss: ss,
                        column: column,
                        mine: mine)
                            ? GetClass(columnName: column.Name).ToExport(
                                context: context,
                                column: column,
                                exportColumn: exportColumn)
                            : string.Empty;
                    break;
                case "Num":
                    value = ss.ReadColumnAccessControls.Allowed(
                        context: context,
                        ss: ss,
                        column: column,
                        mine: mine)
                            ? GetNum(columnName: column.Name).ToExport(
                                context: context,
                                column: column,
                                exportColumn: exportColumn)
                            : string.Empty;
                    break;
                case "Date":
                    value = ss.ReadColumnAccessControls.Allowed(
                        context: context,
                        ss: ss,
                        column: column,
                        mine: mine)
                            ? GetDate(columnName: column.Name).ToExport(
                                context: context,
                                column: column,
                                exportColumn: exportColumn)
                            : string.Empty;
                    break;
                case "Description":
                    value = ss.ReadColumnAccessControls.Allowed(
                        context: context,
                        ss: ss,
                        column: column,
                        mine: mine)
                            ? GetDescription(columnName: column.Name).ToExport(
                                context: context,
                                column: column,
                                exportColumn: exportColumn)
                            : string.Empty;
                    break;
                case "Check":
                    value = ss.ReadColumnAccessControls.Allowed(
                        context: context,
                        ss: ss,
                        column: column,
                        mine: mine)
                            ? GetCheck(columnName: column.Name).ToExport(
                                context: context,
                                column: column,
                                exportColumn: exportColumn)
                            : string.Empty;
                    break;
                case "Attachments":
                    value = ss.ReadColumnAccessControls.Allowed(
                        context: context,
                        ss: ss,
                        column: column,
                        mine: mine)
                            ? GetAttachments(columnName: column.Name).ToExport(
                                context: context,
                                column: column,
                                exportColumn: exportColumn)
                            : string.Empty;
                    break;
                default: return string.Empty;
            }
            break;
    }
    return CsvUtilities.EncloseDoubleQuotes(
        value: value,
        encloseDoubleQuotes: encloseDoubleQuotes);
}